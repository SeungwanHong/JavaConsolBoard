package server.thread;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

import commons.packet.RequestPacket;
import server.doa.UserDao;

public class ServerThread extends Thread{
	private Socket clientSocket;
	private UserDao dao;
	
	private DataInputStream dis;
	private DataOutputStream dos;
	
	
	//쓰래드 생성시 접속한 클라이언트로부터 데이터를 받거나 접속한 클라이언트에게 데이터를 전송하기
	//위해 클라이언트 소켓을 생성자의 매게변수로 받는다.
	public ServerThread(Socket clientSocket){
		this.clientSocket = clientSocket;
		//Thread 마다 dao를 이용해서 쿼리 처리해준다.
		dao = new UserDao();
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		try {
			dis = new DataInputStream(clientSocket.getInputStream());
			dos = new DataOutputStream(clientSocket.getOutputStream());
			
			int req_packet = 0;
			//클라이언트가 종료 패킷을 보내지 않으면 반복 계속 패킷과 패킷에 대한
			//요청 처리를 하겠다.
			while(req_packet != RequestPacket.REQ_EIXT){
				
				//1) 서버는 클라이언트가 보내는 패킷을 받는다.
				req_packet = dis.readInt()
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			try{
				dis.close();
				dos.close();
				clientSocket.close();
			}catch(IOException e){
				e.printStackTrace();
			}
		}
		
		
	}
	
	
}
